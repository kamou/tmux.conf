set -g default-terminal "screen-256color"
# use ctrl-w as escape sequence
set-option -g   prefix C-w
bind-key C-w  send-prefix
# make xterm generate its own xterm-style sequence when it receives a sequence
# that its TERM identifies.
# This allows combinations such as Alt-Up in vim...
# http://unix.stackexchange.com/questions/29907/how-to-get-vim-to-work-with-tmux-properly
set-option -g xterm-keys on

set-option -g mode-keys vi
# fix escape timeout for vim
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# split windows, not using vim ctrl-w v or s as it wouldn't work from inside vim
unbind %
bind % split-window -v
unbind |
bind | split-window -h

# pane resize
bind Left resize-pane -L 10 
bind Right resize-pane -R 10
bind Down resize-pane -D 10
bind Up resize-pane -U 10 

#increase history limit to 100000 lines
set -g history-limit 100000

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind w if-shell "$is_vim" "send-keys C-w w" "select-pane -l"
# forward needed keys (only the ones I use)
bind s if-shell "$is_vim" "send-keys C-w s" "split-window -v"
bind v if-shell "$is_vim" "send-keys C-w v" "split-window -h"
bind = if-shell "$is_vim" "send-keys C-w =" "choose-buffer"
bind > if-shell "$is_vim" "send-keys C-w >" "resize-pane -R 10"
bind < if-shell "$is_vim" "send-keys C-w <" "resize-pane -L 10"
bind + if-shell "$is_vim" "send-keys C-w +" "resize-pane -U 10"
bind - if-shell "$is_vim" "send-keys C-w -" "resize-pane -D 10"
bind H if-shell "$is_vim" "send-keys C-w H" # no default mapping
bind L if-shell "$is_vim" "send-keys C-w L" "switch-client -l"
bind K if-shell "$is_vim" "send-keys C-w K" # no default mapping
bind J if-shell "$is_vim" "send-keys C-w J" # no default mapping
bind T if-shell "$is_vim" "send-keys C-w T" # no default mapping
